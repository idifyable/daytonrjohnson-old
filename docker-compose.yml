version: '3.4'
services:

# NodeJS Backend Service #
  node:
    build:
      context: .
      args:
        NODE_ENV: development
    command:  ["-wait", "tcp://postgres:5432", "../node_modules/.bin/nodemon", "-L", "--inspect=0.0.0.0:9229", "./bin/www"]
    ports:
      - "80:3000" # Web Server
      - "9229:9229" # Node Debug
    volumes:
      # Application data
      - .:/opt/app
      # By bind-mounting these two files, you can add packages during development without rebuilding
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
    secrets:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    environment:
      DEBUG: daytonrjohnson:*
      NODE_ENV: development
      POSTGRES_HOST: postgres # Docker service name
      POSTGRES_PORT: 5432
    depends_on:
      - postgres
    links:
      - postgres

# PostgreSQL Database Service #
  postgres:
    image: postgres:9.6.8-alpine
    ports:
      - "5432:5432"
    secrets:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB

# Docker Secrets
secrets:
  # Database Secrets
  POSTGRES_DB:
    file: ./secrets/development/POSTGRES_DB
  POSTGRES_USER:
    file: ./secrets/development/POSTGRES_USER
  POSTGRES_PASSWORD:
    file: ./secrets/development/POSTGRES_PASSWORD
